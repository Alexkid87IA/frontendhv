/**
 * Script de validation de l'int√©grit√© de la homepage
 * Ce script v√©rifie que tous les composants de la homepage sont correctement connect√©s √† Sanity
 * et qu'ils disposent d'un fallback robuste vers des donn√©es mock√©es en cas d'erreur.
 */

import { sanityClient } from '../utils/sanityClient';
import { getAllArticles, getAmuseBouches, getFeaturedDebate, getUniverses, getClubFeatures, getClubPricing, getContentItems } from '../utils/sanityAPI';

// Fonction principale de validation
async function validateHomepage() {
  console.log('üîç D√©but de la validation de l\'int√©grit√© de la homepage...');
  
  try {
    // V√©rifier la connexion √† Sanity
    console.log('üîå V√©rification de la connexion √† Sanity CMS...');
    const connectionTest = await sanityClient.fetch('*[_type == "sanity.imageAsset"][0]._id');
    
    if (connectionTest) {
      console.log('‚úÖ Connexion √† Sanity CMS √©tablie avec succ√®s');
    } else {
      console.warn('‚ö†Ô∏è Impossible de v√©rifier la connexion √† Sanity CMS');
    }
    
    // V√©rifier les articles r√©cents
    console.log('\nüì∞ V√©rification des articles r√©cents...');
    const articles = await getAllArticles();
    console.log(`${articles.length > 0 ? '‚úÖ' : '‚ö†Ô∏è'} ${articles.length} articles r√©cup√©r√©s`);
    
    // V√©rifier les amuses-bouches
    console.log('\nüçΩÔ∏è V√©rification des amuses-bouches...');
    const amuseBouches = await getAmuseBouches();
    console.log(`${amuseBouches.length > 0 ? '‚úÖ' : '‚ö†Ô∏è'} ${amuseBouches.length} amuses-bouches r√©cup√©r√©s`);
    
    // V√©rifier le d√©bat √† la une
    console.log('\nüí¨ V√©rification du d√©bat √† la une...');
    const debate = await getFeaturedDebate();
    console.log(`${debate ? '‚úÖ' : '‚ö†Ô∏è'} D√©bat √† la une ${debate ? 'r√©cup√©r√©' : 'non trouv√©'}`);
    
    // V√©rifier les univers √©ditoriaux
    console.log('\nüåç V√©rification des univers √©ditoriaux...');
    const universes = await getUniverses();
    console.log(`${universes.length > 0 ? '‚úÖ' : '‚ö†Ô∏è'} ${universes.length} univers r√©cup√©r√©s`);
    
    // V√©rifier les fonctionnalit√©s du club
    console.log('\nüëë V√©rification des fonctionnalit√©s du club...');
    const clubFeatures = await getClubFeatures();
    console.log(`${clubFeatures.length > 0 ? '‚úÖ' : '‚ö†Ô∏è'} ${clubFeatures.length} fonctionnalit√©s du club r√©cup√©r√©es`);
    
    // V√©rifier les tarifs du club
    console.log('\nüí∞ V√©rification des tarifs du club...');
    const clubPricing = await getClubPricing();
    console.log(`${clubPricing.length > 0 ? '‚úÖ' : '‚ö†Ô∏è'} ${clubPricing.length} tarifs du club r√©cup√©r√©s`);
    
    // V√©rifier les podcasts
    console.log('\nüéôÔ∏è V√©rification des podcasts...');
    const podcasts = await getContentItems('emission');
    console.log(`${podcasts.length > 0 ? '‚úÖ' : '‚ö†Ô∏è'} ${podcasts.length} podcasts r√©cup√©r√©s`);
    
    // V√©rifier les √©tudes de cas
    console.log('\nüìä V√©rification des √©tudes de cas...');
    const caseStudies = await getContentItems('business-idea');
    console.log(`${caseStudies.length > 0 ? '‚úÖ' : '‚ö†Ô∏è'} ${caseStudies.length} √©tudes de cas r√©cup√©r√©es`);
    
    // V√©rifier les success stories
    console.log('\nüèÜ V√©rification des success stories...');
    const successStories = await getContentItems('success-story');
    console.log(`${successStories.length > 0 ? '‚úÖ' : '‚ö†Ô∏è'} ${successStories.length} success stories r√©cup√©r√©es`);
    
    // R√©sum√©
    console.log('\nüìã R√©sum√© de la validation:');
    const totalSections = 9;
    const sectionsWithData = [
      articles.length > 0,
      amuseBouches.length > 0,
      debate !== null,
      universes.length > 0,
      clubFeatures.length > 0,
      clubPricing.length > 0,
      podcasts.length > 0,
      caseStudies.length > 0,
      successStories.length > 0
    ].filter(Boolean).length;
    
    console.log(`‚úÖ ${sectionsWithData}/${totalSections} sections avec donn√©es r√©elles de Sanity`);
    console.log(`‚ö†Ô∏è ${totalSections - sectionsWithData}/${totalSections} sections utilisant des donn√©es mock√©es`);
    
    if (sectionsWithData === totalSections) {
      console.log('\nüéâ Toutes les sections de la homepage sont connect√©es √† Sanity avec succ√®s!');
    } else {
      console.log('\n‚ö†Ô∏è Certaines sections utilisent des donn√©es mock√©es. V√©rifiez que le contenu est bien cr√©√© dans Sanity Studio.');
    }
    
    console.log('\n‚úÖ Validation de l\'int√©grit√© de la homepage termin√©e');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la validation:', error);
  }
}

// Ex√©cuter la validation
validateHomepage();
